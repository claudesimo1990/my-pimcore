FROM php:7.3.21-fpm-stretch

MAINTAINER Dirk Blicker <dirk.blicker@abus-kransysteme.de>

ARG phpini
ARG http_proxy
ARG https_proxy

ENV http_proxy="$http_proxy"
ENV https_proxy="$https_proxy"

### FOR DEVELOPMENT ONLY
ARG proxy
ARG development
RUN if [ "$proxy" -eq "1" ]; then pear config-set http_proxy $http_proxy; fi
RUN if [ "$proxy" -eq "1" ]; then echo "Acquire::http::Pipeline-Depth 0;" >> /etc/apt/apt.conf.d/99fixbadproxy; fi
RUN if [ "$proxy" -eq "1" ]; then echo 'Acquire::http::No-Cache true;' >> /etc/apt/apt.conf.d/99fixbadproxy; fi
RUN if [ "$proxy" -eq "1" ]; then echo "Acquire::BrokenProxy true;" >> /etc/apt/apt.conf.d/99fixbadproxy; fi


# Install additional software
RUN apt-get update && apt-get install -y --no-install-recommends \
        autoconf automake libtool nasm make pkg-config libz-dev build-essential openssl g++ \
        zlib1g-dev libicu-dev libbz2-dev libpng-dev libc-client-dev \
        libkrb5-dev libxml2-dev libxslt1.1 libxslt1-dev locales locales-all \
        ffmpeg html2text ghostscript libreoffice pngcrush jpegoptim exiftool poppler-utils git wget \
        libx11-dev libjpeg-dev python3-pip opencv-data webp graphviz cmake unzip cron \
        liblcms2-dev liblqr-1-0-dev libpng-dev libopenjp2-7-dev libtiff-dev libfreetype6-dev \
        libfontconfig1-dev libfftw3-dev libltdl-dev liblzma-dev libopenexr-dev \
        libwmf-dev libdjvulibre-dev libpango1.0-dev libxext-dev libxt-dev librsvg2-dev libzip-dev \
        libpng-dev libfreetype6-dev libjpeg-dev libxpm-dev libwebp-dev libldap2-dev libonig-dev libcurl4-openssl-dev libmagickwand-dev cron xfonts-base xfonts-75dpi python3-setuptools \
    && CFLAGS="-I/usr/src/php" docker-php-ext-install xmlreader \
    && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \
    && docker-php-ext-configure gd  --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-webp-dir=/usr/include/ \
    && docker-php-ext-configure intl \
    && docker-php-ext-install -j$(nproc) \
        gd \
        iconv \
        opcache \
        ldap \
        pdo \
        pdo_mysql \
        mysqli \
        intl \
        json \
        xsl \
        xmlrpc \
        simplexml \
        posix \
        mbstring \
        exif \
        bz2 \
        curl \
        dom \
        fileinfo \
        ftp \
        pcntl \
        zip \
        bcmath \
&& if [ "$development" -eq "1" ]; then yes | pecl install xdebug \
    && mkdir /var/log/xdebug \
    && touch /var/log/xdebug/remote.log \
    && chmod 777 /var/log/xdebug/remote.log \
    && echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.default_enable=0" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_enable=1" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_autostart=0" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.profiler_enable=0" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.profiler_output_dir=/var/log/xdebug" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_log=/var/log/xdebug/remote.log" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_connect_back=0" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_port=9000" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.idekey=PHPSTORM" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.max_nesting_level=1000" >> /usr/local/etc/php/conf.d/xdebug.ini; fi \
&& pecl install imagick && pecl install apcu && pecl install redis && docker-php-ext-enable redis imagick apcu \
&& wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.stretch_amd64.deb \
    && dpkg -i wkhtmltox_0.12.6-1.stretch_amd64.deb \
    && rm wkhtmltox_0.12.6-1.stretch_amd64.deb \
&& git clone https://github.com/mozilla/mozjpeg.git  \
        && cd mozjpeg \
        && cmake -G"Unix Makefiles" \
        && make \
        && make install \
        && ln -s /opt/mozjpeg/bin/cjpeg /usr/bin/cjpeg \
        && cd .. \
        && rm -rf mozjpeg \
&& git clone https://gitlab.com/wavexx/facedetect \
        && pip3 install --upgrade pip \
        && pip3 install numpy opencv-python \
        && cd facedetect \
        && cp facedetect /usr/local/bin \
        && cd .. \
        && rm -rf facedetect \
&& git clone https://github.com/google/zopfli.git \
        && cd zopfli \
        && make \
        && cp zopfli /usr/bin/zopflipng \
        && cd .. \
        && rm -rf zopfli \
&& wget http://static.jonof.id.au/dl/kenutils/pngout-20150319-linux.tar.gz \
        && tar -xf pngout-20150319-linux.tar.gz \
        && rm pngout-20150319-linux.tar.gz \
        && cp pngout-20150319-linux/x86_64/pngout /bin/pngout \
        && cd .. \
        && rm -rf pngout-20150319-linux \
&& wget http://prdownloads.sourceforge.net/advancemame/advancecomp-1.17.tar.gz \
        && tar zxvf advancecomp-1.17.tar.gz \
        && cd advancecomp-1.17 \
        && ./configure \
        && make \
        && make install \
        && cd .. \
        && rm -rf advancecomp-1.17 \
&& apt-get autoremove -y \
    && apt-get remove -y autoconf automake libtool nasm make pkg-config libz-dev build-essential g++ \
    && apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* ~/.composer

ENV COMPOSER_ALLOW_SUPERUSER 1
ENV COMPOSER_MEMORY_LIMIT -1
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

ENV PATH="${PATH}:/root/.composer/vendor/bin"

# PHP konfigurieren
COPY config/$phpini /usr/local/etc/php/conf.d/abus.ini

# PHP-FPM konfigurieren
COPY config/php-fpm.conf /usr/local/etc/php-fpm.d/z_last_abus.conf

# Add CRONJOB
RUN mkdir /var/log/cron && touch /var/log/cron/cron.log && chmod 777 /var/log/cron/cron.log
COPY cron/pimcore-cron /etc/cron.d/pimcore-cron
RUN crontab /etc/cron.d/pimcore-cron

# Nur wegen https://github.com/coreshop/CoreShop/issues/1234
#ENV PIMCORE_PHP_ERROR_REPORTING="E_ALL & ~E_NOTICE & ~E_STRICT"

WORKDIR /var/www/html

COPY entrypoint.sh /
RUN chmod 777 /entrypoint.sh
ENTRYPOINT /entrypoint.sh